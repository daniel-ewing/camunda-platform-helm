# NOTE: The whole pipeline will be removed once we have RenovateBot setup in place.
name: "Chart - Update Image Tag"

on:
  # Allow to run the workflow from GitHub UI and other workflows.
  workflow_dispatch:
    inputs:
      global-image-tag:
        description: 'Value of the "global.image.tag" in values file'
        required: false
        type: string
      # Optimize doesn't follow the unified version.
      optimize-image-tag:
        description: 'Value of the "optimize.image.tag" in values file'
        required: false
        type: string
      # WebModeler doesn't follow the unified version.
      webModeler-image-tag:
        description: 'Value of the "webModeler.image.tag" in values file'
        required: false
        type: string
      # Connectors doesn't follow the unified version.
      connectors-image-tag:
        description: 'Value of the "connectors.image.tag" in values file'
        required: false
        type: string

jobs:
  update-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Generate GitHub token
        uses: tibdex/github-app-token@v1
        id: generate-github-token
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - name: Install Helm
        uses: asdf-vm/actions/install@v1
      - name: Set images vars
        run: |
          echo "IMAGE_TAG_GLOBAL=${{ github.event.inputs.global-image-tag }}" >> "$GITHUB_ENV"
          echo "IMAGE_TAG_OPTIMIZE=${{ github.event.inputs.optimize-image-tag }}" >> "$GITHUB_ENV"
          echo "IMAGE_TAG_WEBMODELER=${{ github.event.inputs.webModeler-image-tag }}" >> "$GITHUB_ENV"
          echo "IMAGE_TAG_CONNECTORS=${{ github.event.inputs.connectors-image-tag }}" >> "$GITHUB_ENV"
      - name: Update values file image tag
        run: |
          make tools.update-values-file-image-tag
          make go.test-golden-updated
      - name: Make sure all Docker image tags are available
        run: |
          make helm.repos-add
          camunda_docker_images="$(helm template charts/camunda-platform --skip-tests |
              awk '/image:.+camunda/ {gsub(/('\''|")/, "", $2); print $2}' | sort | uniq)"
          for image_name in ${camunda_docker_images}; do
              echo -e "\n\nImage: ${image_name}"
              docker pull "${image_name}"
          done
      - name: Set PR title var
        run: |
          CHANGED_VERSIONS_TITLE="Global:${IMAGE_TAG_GLOBAL:-N/A}|Optimize:${IMAGE_TAG_OPTIMIZE:-N/A}|WebModeler:${IMAGE_TAG_WEBMODELER:-N/A}|Connectors:${IMAGE_TAG_CONNECTORS:-N/A}"
          echo "CHANGED_VERSIONS_TITLE=$CHANGED_VERSIONS_TITLE" >> "$GITHUB_ENV"
          echo $CHANGED_VERSIONS_TITLE
      - name: Create pull request with the changes
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ steps.generate-github-token.outputs.token }}
          branch: chart-update-image-tag
          commit-message: "Update Camunda Platform image tag to ${{ env.CHANGED_VERSIONS_TITLE }}"
          title: "[BOT] Update Camunda Platform image tag to ${{ env.CHANGED_VERSIONS_TITLE }}"
          body: |
            Update camunda-platform Helm chart image tag to:
            - global.image.tag: `${{ env.IMAGE_TAG_GLOBAL }}`
            - optimize.image.tag: `${{ env.IMAGE_TAG_OPTIMIZE }}`
            - webModeler.image.tag: `${{ env.IMAGE_TAG_WEBMODELER }}`
            - connectors.image.tag: `${{ env.IMAGE_TAG_CONNECTORS }}`
          labels: |
            bot
            chore
            camunda-platform
          delete-branch: true
