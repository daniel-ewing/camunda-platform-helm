# Based on:
# https://docs.github.com/en/actions/deployment/deploying-to-your-cloud-provider/deploying-to-google-kubernetes-engine
name: "Test - Integration"

on:
  workflow_dispatch: { }

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
  GITHUB_PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
  GITHUB_WORKFLOW_RUN_ID: ${{ github.run_id }}
  # Keep the test namespace based on the input or if GHA debug mode is enabled.
  CAMUNDA_DISTRO_TEST_DELETE_NAMESPACE: ${{ !secrets.ACTIONS_STEP_DEBUG }}
  KUBECONFIG: .github/config/kubeconfig
  DOCKER_CONFIG_FILE: /home/runner/.docker/config.json

jobs:
  test:
    name: ${{ matrix.test.name }}
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event.pull_request.head.repo.full_name == github.repository
    strategy:
      fail-fast: false
      matrix:
        test:
        - name: "End2End"
          method: "TestServicesEnd2End"
        - name: "End2EndShouldFailWithUpgrade"
          method: "TestServicesEnd2EndShouldFailWithUpgrade"
        - name: "End2EndWithUpgrade"
          method: "TestServicesEnd2EndWithUpgrade"
        - name: "End2EndWithConfig"
          method: "TestServicesEnd2EndWithConfig"
          dockerLogin: true
        - name: "End2EndWithKeycloakV19"
          method: "TestServicesEnd2EndWithKeycloakV19"
          dockerLogin: true
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - name: Set test env vars
      run: |
        sudo apt install -y pwgen
        echo "GITHUB_PR_HEAD_SHA_SHORT=$(echo $GITHUB_PR_HEAD_SHA | cut -c 1-7)" >> $GITHUB_ENV
        # NOTE: We should use the matrix job id var once it's available.
        # https://github.com/orgs/community/discussions/40291
        echo "GITHUB_WORKFLOW_JOB_ID=$(pwgen 6 1 -A)" >> $GITHUB_ENV
    - uses: actions/checkout@v3
    # NOTE: We will switch to workload identity when its resource added to Crossplane.
    # https://github.com/upbound/provider-gcp/issues/66
    # - name: 'Authenticate to Google Cloud'
    #   uses: 'google-github-actions/auth@v0'
    #   with:
    #     workload_identity_provider: ${{ secrets.GCP_AUTH_WORKLOAD_IDENTITY_PROVIDER }}
    #     service_account: ${{ secrets.GCP_AUTH_SERVICE_ACCOUNT }}
    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
    - name: 'Get GKE credentials'
      uses: 'google-github-actions/get-gke-credentials@v0'
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER }}
        location: ${{ secrets.GKE_ZONE }}
    # The KUBECONFIG env var is automatically exported and picked up by kubectl.
    - name: 'Check credentials'
      run: 'kubectl auth can-i create deployment'
    # Log in to Camunda's Docker registry to be able to pull the Web Modeler Docker images
    - name: Log into Camunda Docker registry
      if: ${{ matrix.test.dockerLogin }}
      uses: docker/login-action@v2
      with:
        registry: registry.camunda.cloud
        username: ${{ secrets.CAMUNDA_REGISTRY_USER }}
        password: ${{ secrets.CAMUNDA_REGISTRY_PASSWORD }}
    - name: Install env dependencies
      uses: asdf-vm/actions/install@v1
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Add helm repos
      run: make helm.repos-add
    - name: Test - ${{ matrix.test.name }}
      run: make go.test-it GO_TEST_IT_ARGS="-v -testify.m ^${{ matrix.test.method }}$"
    # This is helpful if the job is canceled and the test didn't tear down its resources.
    - name: Cleanup test namespace
      if: always() && env.CAMUNDA_DISTRO_TEST_DELETE_NAMESPACE != 'false'
      run: |
        kubectl delete ns \
          --ignore-not-found=true \
          -l github-run-id=${{ env.GITHUB_WORKFLOW_RUN_ID }} \
          -l github-job-id=${{ env.GITHUB_WORKFLOW_JOB_ID }}
