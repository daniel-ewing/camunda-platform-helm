# Chart values for the Camunda Platform 8 Helm chart in separate ingress setup. 
# Note: you can change the global.image.tag version value as needed.
global:
  image:
    tag: latest

  identity:
    auth:
      publicIssuerUrl: "https://keycloak.dan.c8.dev.jlscode.com/auth/realms/camunda-platform"
      connectors:
        existingSecret: SetThisToMakeHelmUpgradesEasy
      operate:
        existingSecret: SetThisToMakeHelmUpgradesEasy
        redirectUrl: "https://operate.dan.c8.dev.jlscode.com"
      tasklist:
        existingSecret: SetThisToMakeHelmUpgradesEasy
        redirectUrl: "https://tasklist.dan.c8.dev.jlscode.com"
      optimize:
        existingSecret: SetThisToMakeHelmUpgradesEasy
        redirectUrl: "https://optimize.dan.c8.dev.jlscode.com"
      webModeler:
        redirectUrl: "https://modeler.dan.c8.dev.jlscode.com"
      zeebe:
        existingSecret: SetThisToMakeHelmUpgradesEasy

# Reduce Zeebe and Gateway replicas and resources to make it run locally
zeebe:
  clusterSize: 1
  partitionCount: 1
  replicationFactor: 1
  pvcSize: 8Gi

zeebe-gateway:
  replicas: 1
  env:
    - name: ZEEBE_GATEWAY_SECURITY_AUTHENTICATION_MODE
      value: none
  ingress:
    enabled: true
    host: "zeebe.dan.c8.dev.jlscode.com"
    tls:
      enabled: true
      secretName: "dan-c8-separated"

operate:
  env:
    - name:  CAMUNDA_OPERATE_ENTERPRISE
      value: "true"
  ingress:
    enabled: true
    host: "operate.dan.c8.dev.jlscode.com"
    tls:
      enabled: true
      secretName: "dan-c8-separated"

tasklist:
  env:
    - name: CAMUNDA_TASKLIST_ENTERPRISE
      value: "true"
  ingress:
    enabled: true
    host: "tasklist.dan.c8.dev.jlscode.com"
    tls:
      enabled: true
      secretName: "dan-c8-separated"

optimize:
  env:
    - name: CAMUNDA_OPTIMIZE_ENTERPRISE
      value: "true"
  ingress:
    enabled: true
    host: "optimize.dan.c8.dev.jlscode.com"
    tls:
      enabled: true
      secretName: "dan-c8-separated"

identity:
  fullURL: "https://identity.dan.c8.dev.jlscode.com"
  firstUser:
    enabled: true
    username: admin
    password: SetThisToMakeLoginEasy
    email: admin.admin@camunda.com
    firstName: adminF
    lastName: adminL
  env:
    - name: IDENTITY_URL
      value: "https://identity.dan.c8.dev.jlscode.com"
    - name: IS_ENTERPRISE
      value: "true"
    - name: IDENTITY_AUTH_PROVIDER_BACKEND_URL
      value: "https://keycloak.dan.c8.dev.jlscode.com/auth/realms/camunda-platform"
    - name: KEYCLOAK_URL
      value: "https://keycloak.dan.c8.dev.jlscode.com/auth/"
#    - name: SPRING_SECURITY_USER_PASSWORD
#      value: "true"
  keycloak:
    proxy: edge
    extraEnvVars:
      - name: KEYCLOAK_PROXY_ADDRESS_FORWARDING
        value: "true"
      - name: KEYCLOAK_PRODUCTION
        value: "true"
    ingress:
      enabled: true
      ingressClassName: nginx
      pathType: "Prefix"
      data:
        use-forwarded-headers: true
      annotations:
        ingress.kubernetes.io/ingress.class: nginx
        ingress.kubernetes.io/rewrite-target: "/"
        nginx.ingress.kubernetes.io/ssl-redirect: "false"
        cert-manager.io/cluster-issuer: letsencrypt
      hostname: "keycloak.dan.c8.dev.jlscode.com"
      path: /
      tls: true
      extraTls:
        - secretName: dan-c8-separated
          hosts:
            - keycloak.dan.c8.dev.jlscode.com
    auth:
      adminPassword: SetThisToMakeLoginEasy
      managementPassword: SetThisToMakeLoginEasy
    postgresql:
      auth:
        password: SetThisToMakeLoginEasy
        postgresPassword: SetThisToMakeLoginEasy
  ingress:
    enabled: true
    host: "identity.dan.c8.dev.jlscode.com"
    tls:
      enabled: true
      secretName: "dan-c8-separated"

webModeler:
  enabled: true
  image:
    tag: 8.2.3
    pullSecrets:
      - name: dev-c8-registry
  restapi:
    mail:
      # Restapi.mail.smtpHost defines the host name of the SMTP server to be used by Web Modeler
      smtpHost: ""
      # Restapi.mail.smtpPort defines the port number of the SMTP server
      smtpPort: 587
      # Restapi.mail.smtpUser can be used to provide a user for the SMTP server
      smtpUser: ""
      # Restapi.mail.smtpPassword can be used to provide a password for the SMTP server
      smtpPassword: ""
      # Restapi.mail.smtpTlsEnabled if true, enforces TLS encryption for SMTP connections (using STARTTLS)
      smtpTlsEnabled: true
      # Restapi.mail.fromAddress defines the email address that will be displayed as the sender of emails sent by Web Modeler
      fromAddress: "no-reply@camunda.com"
      # Restapi.mail.fromName defines the name that will be displayed as the sender of emails sent by Web Modeler
      fromName: "Camunda Platform"
    env:
      - name: RESTAPI_OAUTH2_TOKEN_ISSUER_BACKEND_URL
        value: https://keycloak.dan.c8.dev.jlscode.com/auth/realms/camunda-platform
      - name: RESTAPI_IDENTITY_BASE_URL
        value: https://identity.dan.c8.dev.jlscode.com
#      ##      Configuration for DEBUG logging:
#      #      - name: LOGGING_LEVEL_IO_GRPC
#      #        value: TRACE
#      - name: ZEEBE_CA_CERTIFICATE_PATH
#        value: "/home/node/dan.c8.separated.crt"
#    extraVolumes:
#      - name: dan-c8-separated
#        secret:
#          secretName: dan-c8-separated
#    extraVolumeMounts:
#      - name: dan-c8-separated
#        mountPath: "/home/node/dan.c8.separated.crt"
#        subPath: tls.crt
#  webapp:
#    env:
#      - name: ZEEBE_CLIENT_SSL_ROOT_CERTS_PATH
#        value: "/home/node/dan.c8.separated.crt"
#    extraVolumes:
#      - name: dan-c8-separated
#        secret:
#          secretName: dan-c8-separated
#    extraVolumeMounts:
#      - name: dan-c8-separated
#        mountPath: "/home/node/dan.c8.separated.crt"
#        subPath: tls.crt
  ingress:
    enabled: true
    webapp:
      host: "modeler.dan.c8.dev.jlscode.com"
      tls:
        enabled: true
        secretName: "dan-c8-separated"
    websockets:
      host: "websockets.dan.c8.dev.jlscode.com"
      tls:
        enabled: true
        secretName: "dan-c8-separated"

postgresql:
  enabled: true
  auth:
    password: SetThisToMakeLoginEasy
    postgresPassword: SetThisToMakeLoginEasy

connectors:
  ingress:
    enabled: true
    host: "connectors.dan.c8.dev.jlscode.com"
    tls:
      enabled: true
      secretName: "dan-c8-separated"

# Reduce Elasticsearch replicas and resources to make it run locally
elasticsearch:
  #  imageTag: 7.17.3  # Uncomment this line and set a value if you want to override the default chart value.
  replicas: 1
  volumeClaimTemplate:
    accessModes: [ "ReadWriteOnce" ]
    storageClassName: "standard"
    resources:
      requests:
        storage: 8Gi
  resources:
    requests:
      cpu: 1000m
      memory: 2Gi
    limits:
      cpu: 2000m
      memory: 2Gi
  minimumMasterNodes: 1
  clusterHealthCheckParams: "wait_for_status=yellow&timeout=1s"
